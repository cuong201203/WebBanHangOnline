@model PagedList.IPagedList<WebBanHangOnline.Models.EF.Product>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Danh sách sản phẩm";
}

<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/whole_web_styles.css">
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/whole_web_responsive.css">

<div class="container product_section_container">
    <div class="row">
        <div class="col product_section clearfix">
            <!-- Breadcrumbs -->
            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a href="/">Trang chủ</a></li>
                    <li class="active">
                        <a href="#">
                            <i class="fa fa-angle-right" aria-hidden="true"></i>
                            @if (ViewBag.CateName != null)
                            {
                            <span class="category-name">@ViewBag.CateName</span>
                            }
                            else
                            {
                            <span class="category-name">Tất cả</span>
                            }
                        </a>
                    </li>
                </ul>
            </div>
            <!-- Sidebar -->
            <div class="sidebar">
                <div class="sidebar_section">
                    <div class="sidebar_title">
                        <h5>Danh mục sản phẩm</h5>
                    </div>
                    @Html.Action("MenuLeft", "Menu", new { id = ViewBag.CateId })
                </div>
                <!-- Price Range Filtering -->
                <div class="sidebar_section">
                    <div class="sidebar_title">
                        <h5>Lọc theo giá</h5>
                    </div>
                    <p>
                        <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
                    </p>
                    <div id="slider-range"></div>
                    <div class="filter_button"><span>Tìm</span></div>
                </div>
            </div>
            <!-- Main Content -->
            <div class="main_content">
                <!-- Products -->
                <div class="products_iso">
                    <div class="row">
                        <div class="col">
                            <!-- Product Sorting -->
                            <div class="product_sorting_container product_sorting_container_top">
                                <ul class="product_sorting">
                                    <li>
                                        <span class="type_sorting_text">Mặc định</span>
                                        <i class="fa fa-angle-down"></i>
                                        <ul class="sorting_type">
                                            <li class="type_sorting_btn" data-isotope-option='{ "sortBy": "original-order" }'><span>Mặc định</span></li>
                                            <li class="type_sorting_btn" data-isotope-option='{ "sortBy": "price" }'><span>Theo giá</span></li>
                                            <li class="type_sorting_btn" data-isotope-option='{ "sortBy": "name" }'><span>Theo tên</span></li>
                                        </ul>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Product List -->
                <div id="product-grid">
                    @Html.Partial("Partial_ProductCategory", Model)
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Content/assets/js/products_custom.js"></script>
}

<script>
    $(document).ready(function () {
        $('.filter_button').on('click', function (e) {
            e.preventDefault();
            var priceRange = $('#amount').val().split('-');
            var priceMin = parseFloat(priceRange[0].replace(/[đ,.]/g, '').trim());
            var priceMax = parseFloat(priceRange[1].replace(/[đ,.]/g, '').trim());

            var url = $('.active a').attr('href');
            $.ajax({
                url: url,
                type: 'GET',
                data: {
                    priceMin: priceMin,
                    priceMax: priceMax,
                    page: 1
                },
                success: function (data) {
                    $('#product-grid').html(data);
                    applyCSSforProductGrid();
                },
                error: function () {
                    alert("Lỗi khi tải sản phẩm.");
                }
            });
        })
    });

    function applyCSSforProductGrid() {
        $('.product_image img').hover(
            function () {
                // Khi hover vào ảnh
                var hoverSrc = $(this).data('src-hover');
                $(this).stop().fadeTo(300, 0.5, function () {
                    $(this).attr('src', hoverSrc).stop().fadeTo(300, 1);
                });
            },
            function () {
                // Khi rời khỏi ảnh
                var defaultSrc = $(this).data('src');
                $(this).stop().fadeTo(300, 0.5, function () {
                    $(this).attr('src', defaultSrc).stop().fadeTo(300, 1);
                });
            }
        );

        $('.product-grid').isotope({
            itemSelector: '.product-item',
            getSortData: {
                price: function (itemElement) {
                    var priceEle = $(itemElement).find('.product_price').text().replace('đ', '');
                    return parseFloat(priceEle);
                },
                name: '.product_name'
            },
            animationOptions: {
                duration: 750,
                easing: 'linear',
                queue: false
            }
        });
    }
</script>


